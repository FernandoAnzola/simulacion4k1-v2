/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VectorDeEstado2.java
 *
 * Created on 17-jul-2009, 18:49:27
 */
package GUI;

import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

/**
 *
 * @author Administrador
 */
public class VectorSolucion extends javax.swing.JFrame {

    /** Creates new form VectorDeEstado2 */
    /** Creates new form VectorSolucion */
    private Object[][] datosTabla;
    private String[] nombresColumna;
    public static final int VECTOR_SOLUCION = 0;
    public static final int VECTOR_DE_PACIENTES = 1;
    private int tipo;

    public VectorSolucion(int t) {//Object[][] data, String[] nombres) {
        initComponents();
        tipo = t;
    }

    public void cargarDatos(Object[][] data, String[] nombres) {
        datosTabla = data;
        nombresColumna = nombres;
        jTable1.setModel(new Modelo());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vector Soluci√≥n");

        jTable1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setEnabled(false);
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 995, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    private class Modelo implements TableModel {

        public Modelo() {
        }

        public int getRowCount() {
            return datosTabla.length;
        }

        public int getColumnCount() {
            return datosTabla[datosTabla.length - 1].length;
        }

        public String getColumnName(int columnIndex) {

            return nombresColumna[columnIndex];

        }

        public Class<?> getColumnClass(int columnIndex) {
            if (tipo == VECTOR_SOLUCION) {
                if (columnIndex == 1 || columnIndex == 3 || columnIndex == 5 || columnIndex == 6 || columnIndex == 7 || columnIndex == 12) {
                    return java.lang.Double.class;
                } else {
                    return java.lang.Object.class;
                }
            } else {
                if (columnIndex == 1) {
                    return java.lang.Double.class;
                } else {
                    int c = 5;
                    while (c < columnIndex) {
                        c = c + 3;
                    }
                    if (c == columnIndex) {
                        return java.lang.Double.class;
                    } else {
                        return java.lang.Object.class;
                    }
                }
            }
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }

        public Object getValueAt(int rowIndex, int columnIndex) {
            try {
                return Integer.parseInt(datosTabla[rowIndex][columnIndex].toString());
            } catch (NumberFormatException ex) {
                try {
                    return Double.parseDouble(datosTabla[rowIndex][columnIndex].toString());
                } catch (NumberFormatException ex2) {
                    return datosTabla[rowIndex][columnIndex].toString();
                }
            } catch (Exception e) {
                return null;
            }
        }

        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
        }

        public void addTableModelListener(TableModelListener l) {
        }

        public void removeTableModelListener(TableModelListener l) {
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
